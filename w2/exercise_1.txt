-- use CTEs instead of subqueries
with food_pref_counts as (
    select 
        customer_id,
        count(*) as food_pref_count
    from vk_data.customers.customer_survey
    where is_active = true
    group by 1
),

chicago_geo_location as (
    select 
        geo_location
    from vk_data.resources.us_cities 
    where city_name = 'CHICAGO' 
    and state_abbr = 'IL'
),

gary_geo_location as (
    select 
        geo_location
    from vk_data.resources.us_cities 
    where city_name = 'GARY' 
    and state_abbr = 'IN'
)

select 
    c.first_name || ' ' || c.last_name as customer_name,
    ca.customer_city,
    ca.customer_state,
    fpc.food_pref_count,
    (st_distance(us.geo_location, cl.geo_location) / 1609)::int as chicago_distance_miles,
    (st_distance(us.geo_location, gl.geo_location) / 1609)::int as gary_distance_miles
from vk_data.customers.customer_address as ca
-- specify type of join
inner join vk_data.customers.customer_data c 
    -- Put join conditions on separate lines
    on ca.customer_id = c.customer_id
left join vk_data.resources.us_cities us 
    -- Use lower case consistently
    on upper(rtrim(ltrim(ca.customer_state))) = upper(trim(us.state_abbr))
    and trim(lower(ca.customer_city)) = trim(lower(us.city_name))
-- Use aliases that abbreviate table name
inner join food_pref_counts fpc 
    on c.customer_id = fpc.customer_id
cross join chicago_geo_location cl
cross join gary_geo_location gl
where 
    (customer_state = 'KY' 
        and (trim(us.city_name) ilike '%concord%' or trim(city_name) ilike '%georgetown%' or trim(city_name) ilike '%ashland%'))
    or (customer_state = 'CA' and (trim(city_name) ilike '%oakland%' or trim(city_name) ilike '%pleasant hill%'))
    or (customer_state = 'TX' and ((trim(city_name) ilike '%arlington%') or trim(city_name) ilike '%brownsville%'))

    